import mysql.connector as db
from random import randint
from StringIO import StringIO
import gzip
import urllib2
import chardet
import time
import json
import sys
import os
#{{{
db_config = {
		'host':			'127.0.0.1',
		'port':			3306,
		'user':			'root',
		'password':	'root',
		'database':	'cnl',
		'autocommit': True,
}
conn = db.connect(**db_config)
cursor = conn.cursor()
#}}}

url_prefix = 'https://www.exploit-db.com/exploits/'
hdr = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64)',
       'Connection': 'keep-alive'}

if __name__ == '__main__':
    for j in range(int(sys.argv[1]), int(sys.argv[2])):
        url = url_prefix + str(j) + '/'
        print url
        time.sleep(1.5)
        try:
            request = urllib2.Request(url, headers=hdr)
            request.add_header('Accept-encoding', 'gzip')
            try:
                response = urllib2.urlopen(request, timeout=60)
            except Exception, e:
                print str(e)
                response = urllib2.urlopen(request, timeout=60)
            if response.info().get('Content-Encoding') == 'gzip':
                buf = StringIO(response.read())
                f = gzip.GzipFile(fileobj=buf)
                data = f.read()
            guess = chardet.detect(data)
            result = dict(url=url,data=data,**guess)
            with open(str(j) + '.txt', 'w') as fp1:
                json.dump(result, fp1)
            print j, 'ok'
        except Exception, e:
            print j, str(e)

#{{{
    """
    for p in detected:
        print '%s -> %s (%s)' % (p['url'], p['encoding'], p['confidence'])
        unicoded = p['data'].decode(p['encoding'])
        d = pq(unicoded)
        for link in d.find('a'):
            link_title = pq(link).text()
            link_url = pq(link).attr.href
            print '%s => %s' % (link_title, link_url)
    """
#}}}
