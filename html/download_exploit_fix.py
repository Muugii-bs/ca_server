import mysql.connector as db
from random import randint
from StringIO import StringIO
import gzip
import urllib2
import chardet
import time
import json
import sys
import os
#{{{
db_config = {
		'host':			'127.0.0.1',
		'port':			3306,
		'user':			'root',
		'password':	'root',
		'database':	'cnl',
		'autocommit': True,
}
conn = db.connect(**db_config)
cursor = conn.cursor()
#}}}

url_prefix = 'https://www.exploit-db.com/exploits/'
file_prefix = './html/'

if __name__ == '__main__':
    urls = {}
    sql = "SELECT DISTINCT exploit_db_id FROM vuln_exploits WHERE use_flag=1"
    cursor.execute(sql)
    for row in cursor:
        urls[row[0]] = url_prefix + row[0] + '/'
    for id,url in urls.iteritems():
        i = id + '.txt'
        if i in os.listdir(os.getcwd()):
            fp = open(i, 'r')
            try:
                tmp = json.load(fp)
                fp.close()
                continue
            except Exception:
                fp.close()
                try:
                    request = urllib2.Request(url)
                    request.add_header('Accept-encoding', 'gzip')
                    response = urllib2.urlopen(request)
                    if response.info().get('Content-Encoding') == 'gzip':
                        buf = StringIO(response.read())
                        f = gzip.GzipFile(fileobj=buf)
                        data = f.read()
                    guess = chardet.detect(data)
                    result = dict(url=url,data=data,**guess)
                    with open(i, 'w') as fp1:
                        json.dump(result, fp1)
                    print id, 'ok'
                except Exception, e:
                    print id, str(e)

#{{{
    """
    for p in detected:
        print '%s -> %s (%s)' % (p['url'], p['encoding'], p['confidence'])
        unicoded = p['data'].decode(p['encoding'])
        d = pq(unicoded)
        for link in d.find('a'):
            link_title = pq(link).text()
            link_url = pq(link).attr.href
            print '%s => %s' % (link_title, link_url)
    """
#}}}
